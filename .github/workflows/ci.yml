---
name: ci

"on":
  push:
    branches:
      - "main"
  pull_request:

env:
  CARGO_INCREMENTAL: 0

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - uses: r7kamura/rust-problem-matchers@v1
      - run: cargo fmt --all -- --check
      - uses: xt0rted/markdownlint-problem-matcher@v2
      - uses: DavidAnson/markdownlint-cli2-action@v19
        with:
          globs: "**/*.md"
      - uses: karancode/yamllint-github-action@v3.0.0
        with:
          yamllint_file_or_dir: "."
          yamllint_strict: false
          yamllint_comment: true
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deny:
    strategy:
      matrix:
        check:
          - advisories
          - bans licenses sources
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: "true"
      - uses: EmbarkStudios/cargo-deny-action@v1
        with:
          rust-version: "1.87.0"
          command: check ${{ matrix.check }}

  clippy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
    # Prevent beta warnings from causing CI failure
    continue-on-error: ${{ matrix.rust == 'beta' }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: clippy
      - uses: r7kamura/rust-problem-matchers@v1
      - run: |
          cargo +${{ matrix.rust }} clippy \
            --all \
            --all-features \
            -- -D warnings

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
        features:
          - alloc,serde
          - serde
          - alloc
          - none
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - uses: r7kamura/rust-problem-matchers@v1
      - run: |
          if [ ${{ matrix.features }} == "none" ]; then
            cargo +${{ matrix.rust }} build \
              --workspace \
              --release \
              --no-default-features
          else
            cargo +${{ matrix.rust }} build \
              --workspace \
              --release \
              --no-default-features \
              --features "${{ matrix.features }}"
          fi

  doc:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
    # Prevent beta warnings from causing CI failure
    continue-on-error: ${{ matrix.rust == 'beta' }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - uses: r7kamura/rust-problem-matchers@v1
      - run: |
          cargo +${{ matrix.rust }} doc \
            --workspace \
            --release \
            --all-features \
            --no-deps

  test-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - uses: taiki-e/install-action@cargo-llvm-cov
      - name: Run tests with coverage
        run: |
          cargo llvm-cov \
            --workspace \
            --all-features \
            --lcov \
            --output-path lcov.info
      - uses: codecov/codecov-action@v3
        with:
          files: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
      - uses: codecov/test-results-action@v1
        if: ${{ !cancelled() }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
